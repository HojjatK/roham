@model Roham.Web.ViewModels.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = User.Identity.IsAuthenticated? "Associate Account" : "Register";
}
<h2>@ViewBag.Title.</h2>
<h3>Associate your @ViewBag.LoginProvider account.</h3>

@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <p class="text-info">
        You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong>.
        @if(!User.Identity.IsAuthenticated)
        {
            @Model.RegisterText
        }
        else
        {
            @Model.AssociateText
        }
        
    </p>

    if (!User.Identity.IsAuthenticated)
    {
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" class="btn btn-default" value="Register" />
            </div>
        </div>
    }
    else
    {
        <div class="form-group">
            @Html.HiddenFor(m => m.Email)
        </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" class="btn btn-default" value="Confirm" />
            </div>
        </div>
    }


}